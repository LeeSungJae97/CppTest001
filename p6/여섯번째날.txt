배열 -> 여러개의 변수를 연속적으로 할당하여 사용하기 위한 기능이다. 

지난 시간에 int 형 배열로 뭔가를 해봤고 
char 형 배열로 과제도 했다. 

char의 배열을 문자형 배열이라고 하고,
줄여서 문자열이라고도 한다.

char string_[15]="Good morning!";   // 가능
char string_[] = "Good morning!';    // 가능
↓
string_="Good Morning"; // 선언 이후에 대입 불가능



NULL 문자 

일반적으로 문자열의 끝을 나타내는 특수한 문자다. 




프로그래밍 언어마다 정의된 값이 조금씩 다르지만, C++에서는 '\0'다.

다른 언어를 하다보면 0인 경우도 있고, 아에 다른 값인 경우도 있다.


일반적으로 파일의 끝도 이런 원리로 알 수 있다.
파일의 끝을 나타내는 끝 값이 존재한다.

이값이 감지되면 파일을 모두 읽어서 열 수 있다.
이 값이 감지되지 않으면 파일이 깨져서 열 수 없다.

파일의 끝을 나타내는 값은 파일의 포맷(형식)마다 다르다.
그래서 확장자를 맘대로 바꾸면 대부분 파일이 깨진다.




여태까지 사용한 scanf_ 사용하면 문자열도 입력 받을 수 있다.
미리 배열을 선언 해두고 해당 배열에 값을 대입하는 방식으로 사용한다.
주의할 점이 있는데, 지정한 크기를 넘어서 입력 받으면 안된다.
유저가 지정한 크기를 넘어서 입력하면 메모리 상의 다른 Stack 또는 Heap 영역 등을 덮어 쓰기 
때문에 문제가 생길 수 있다. 그래서 scanf_같은 함수를 현업에서는 딱히 쓰지 않는다.







함수에는 시그니처가 있다.
서로 다르게 선언 혹은 정의된 두 함수의 타입을 구별할 때 리턴 타입과 매개변수의 타입,
매개변수의 갯수를 본다. 
함수 A의 리턴 타입,매개변수의 갯수,매개변수의 타입과 순서가 모두 
함수 B의 리턴 타입,매개변수의 갯수,매개변수의 타입과 순서가 모두
가 동일 하다면 두 함수의 타입은(시그니처는)같다고 본다.



포인트란 무엇인가?
포인터는 변수의 주소값을 저장하기 위해서 사용한다.

변수에는 주소값이 존재한다.
변수는 [주소값]과 해당 주소값에 저장되어 있는 [할당된] 값으로 이루어져 있다.





int number = 10;

정수형 포인터는 아래와 같이
[데이터 타입][*][변수명];
int* ptrNumber; 선언한다.

주소값을 대입할 때는 동일한 데이터 타입으로 대입해야 하고,아래와 같이 &기호를 사용한다.
ptrNumber = &number;
이 과정을 프로그래머들은 "참조한다"라고 표현한다.

주소값이 가지고 있는 실제로 할당된 값을 접근할 때는
*기호를 사용한다.
printf("ptrNumber가 가지고 있는 값:%d \n",*ptrNumber);
이 과정을 프로그래머들은 "역참조한다"라고 표현한다.





데이터 스왑?


과제 트럼프 카드 1장을 랜덤하게 뽑아서 출력하는 프로그램 만들기.
힌트. int cards[52] = {0,};
      
힌트 A, 2,3,4,5,6,7,8,9,10,J,Q,K  /한 무늬 당 13장씩 존재한다.

출력예시
Spade/5