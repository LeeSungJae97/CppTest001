int numbers[3];


numbers
↓
int numbers[0];  int numbers[1];  int numbers[2];



포인터

참조: 포인터에 주소값 대입(할당)하는지 

ex)int* ptr Number = & 무언가

역참조:포인터에 저장된 주소값 찾아가는 거 

ex)*ptr Number


선택정렬?

루프를 돌아서 가장 작은 값을 찾아서 0번째 인덱스와 교환한다.
다음 루프에서 0번째 인덱스는 빼고 나머지 루프를 돈다.
또 가장 작은 값을 찾아서 1번째 인덱스와 교환한다.
다음 루프에서 1번째 0~1번째 인덱스는 빼고 나머지 루프를 돈다.
이하 반복하면 오름차순으로 값이 정렬된다.

버블정렬?

버블 정렬은 0번째 인덱스와 1번째 인덱스를 비교해서 스왑한다.
작은 값은 왼쪽,큰 값은 오른쪽으로 스왑한다.
다음 싸이클에서 1번째 인덱스와 2번째 인덱스를 비교해서 
작은 값은 왼쪽, 큰 값은 오른쪽으로 스왑한다.
21     59      36       99      17   
(캡처 참고)


삽입 정렬
삽입 정렬은 메인 루프를 돌아서 정렬할 요소를 선택한다.
정렬할 요소를 이미 정렬이 끝난 배열 안에서 제자리를 찾아 가도록 스왑한다.

21,59,36,99,17

1번째 싸이클
17을 찾아서 0번째 인덱스 -> 21과 스왑 → 17,59,36,99,21

2번째 싸이클
21을 찾아서 1번째 인덱스 -> 59와 스왑 → 17,21,36,99,59


5개짜리 배열 만들어서 유저한테 랜덤하게 5개의 숫자를 입력 받아서
배열에 저장하는 거


2차원 배열/벡터
int numbers[1][3];

1 2 3

int numbers[2][3];

1 2 3 4 5 6

int numbers[3][3]

1 2 3 4 5 6 7 8 9;
