차후에 팀 프로젝트 할텐데 이때 컨벤션 부터 정하고 들어갈 예정

HP회복하는 함수를 만든다. 이것을 출력하는 함수를 만듬
PrintHealValue()
Print_HealValue()
Add_Heal()


코딩컨벤션 
↓
프로그래밍 하면서 지켜야 할 규칙들이 있다. 
컴파일러가 체크해주는 규칙이 아니다.
사람과 사람 사이의 규칙을 정한 것. 

헝가리안:int iNumberValue(타입을 명시하는 스타일)
카멜케이스:int numberValue(일반적으로 변수에 많이 쓰는 스타일)
파스칼:int NumberValue(일반적으로 함수에 많이 쓰는 스타일)
스네이크: int number_value(과거의 파이썬에서 많이 쓰는 스타일)


중괄호 스타일 
if()   
{
   //내용
}

메모리는 어떻게 생겼는지?

Stack : 메모리 상에서 가까운 곳에 있다. 상대적으로 조그맣다. 그래서 빠르다.
Heap : 메모리 상에서 먼 곳에 있다. 상대적으로 크다. 그래서 느리다.(동적메모리)
Data  : 전역 변수가 저장되는 곳.(정적메모리)
Code : 소스 코드가 메모리에 올라가서 저장되는 곳.

Stack이 어떻게 생겼는지? 
캡처본 
입구에 가까운 쪽부터 빠져나간다.


바이너리 파일 : 실행 가능한 파일을 말하는 것.

텍스트 파일: 메모장으로 열리는 다른 모든 파일



Stack -> 뭔가를 저장했음. a 

Heap -> 뭔가를 저장했음. b 


10진수 -> 10의 자리에서 올라감
16진수 -> 16의 자리에서 올라감 2^4

Type casting (형변환): 자료형을 강제로 변환하는 기능 , 값의 손실이 일어날 수 있다.

char char_= 'A';
int int_=(int)char_;




배열:배열은 둘 이상의 변수를 연속적으로 모아 놓은 것. EX)총알 게임 총알 만들때 
다수의 데이터를 저장하고 처리하는 경우에 사용한다.



배열이 어떻게 생겼나?
↓ 
int numbers[5];      // 선언



배열은 index(첨자)로 접근 가능하다.
↓
배열의 첫번째 요소에 접근하는 방법
numbers[0]   // 이렇게 접근한다.


초기화는 알수있는 값으로 설정하기 위해서 초기화 한다.